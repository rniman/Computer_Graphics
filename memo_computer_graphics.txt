
2022 / 09 / 21

openGL 32bit 설치를 했다. 직접 라이브러리와 파일들을 넣는 방식으로 하였다.
나는 하루 전에 vcpkg를 이용하여 설치를 하였다.
vcpkg - 파일을 돌아가면서 하나하나씩 넣어줄 필요가 없었다.
	   그리고 프로젝트 설정에서 링커 명령줄에 라이브러리를 추가하지 않아도 작동했다.

직접한 방식 - 어렵지는 않았다. 다만 파일들을 하나씩 다운받고 하나씩 경로에 넣어야하는 불편함이 있었다. 
		  프로젝트 설정에서 링커 명령줄을 추가해야한다.

실습 1_1
윈도우 창을 띄우고 배경색을 커맨드에 따라 변경 시켰다.
정수형 랜덤값을 0~100까지 받아서 0.00f ~ 1.00f까지 표현 해보았고 중간에 floor()를 써보았다.

실습 1_2
윈도우창에 사각형 하나를 그리고 마우스 입력에 따라 색과 크기를 변경시켰다.
사각형을 하나를 그리려 하니 윈도우 좌표계에서 openGL좌표계로 바꿔줄 필요가 있었다.
해결 -> (좌표 - 윈도우 너비(높이) / 2.0) * (1.0/(윈도우 너비(높이)/2.0)) ->openGL좌표에 맞게 조절할수 있었다.


2022 / 09 / 22

실습 1_3
사각형을 그려서 마우스 드래그를 해서 옮기는 기능을 만들었다. 마우스 좌표는 윈도우 좌표계이고 사각형은 오픈지엘 좌표계여서
사각형을 클릭했다는 정보를 얻기위해서 1_2와는 반대로 오픈지엘 좌표계 좌표를 윈도우 좌표계로 바꿔줘야했다.

GLvoid convert_OpenglXY_WindowXY(int& x, int& y, const float& ox, const float& oy)
{
	x = static_cast<int>((window_w / 2) + ox * (window_w / 2));	
	y = static_cast<int>((window_h / 2) - oy * (window_h / 2));
}

이 함수를 만들면서 오류가 발생했는데 사각형의 좌표가 이상해졌다. 그이류를 생각해보니 y축의 방향이 반대이다 보니 부호를 바꿔줘야했다.

실습 1_4
애니메이션 구현을 해보았는데 대각이동 지그재그 이동 크기바꾸기 3개를 했다.
크기를 바꾼후에 대각이동을 시켰을때 사각형이 모서리에서 방향을 바꾸지 못하고 좀더 가서 바꾸는 버그가 발생했다.
알고보니 크기를 무작위로 바꿀때 사각형의 left와 right 그리고 top과 bottom이 서로 반대가 되는것을 막아야했다.

2022 / 09 / 23

실습 1_5
사각형들을 화면에 띄우고 클릭시 생기는 사각형을 드래그하여 사각형끼리 충돌하면 충돌한 사각형을 없애는 프로그램을 만들었다.
처음으로 하나의 프로그램에서 상속을 써보았다. 물론 옳게 사용했냐에는 의문이 생기지만 점차 나아지기를 바란다.

2022 / 10 / 01

실습 1_6
세이더 프로그램을 이용해 삼각형 4개를 그려보았다. 아직까지는 세이더 프로그램의 작동방식이 의문이 든다. vao vbo를 생성하고 바인드해서
그리는 과정이 아직 익숙해지지않은 탓인거 같기도 하다.

실습 1_7
삼각형 4개를 팅기면서 이동시키는 애니메이션을 만들었다. 튕기는 작동방식을 구현하는데 있어서  구조적으로 많이 복잡하게 짜여졌다.
뭔가 변수라던지 다양한 계산식들을 보기좋게 정리할 필요성을 느꼈다.

실습 1_8
1_7에 이어서 가운데 사각형을 추가해 추가로 구현하는 문제였다. 1_7을 해서 어렵지는 않았지만 역시나 작동 방식을 좀더 알기 쉽게 만들
 필요가 있어 보인다.

실습 1_9 
회오리 애니메이션을 만드는 프로그램을 구현하였다. 점을 하나만을 이동시키면 구현하다보니 화면이 리셋되어 점하나만 이동하는 그림이
그렸졌다. 그래서 vector를 이용해  vbo에 점을 하나씩 추가시키는 방식으로 구현해 보았다. 이 방식은 vector를 계속 늘리게 되는데 
썩 효율적이게 다가오지는 않는다.